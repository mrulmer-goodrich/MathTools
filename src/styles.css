/* styles.css — UG Math Tools (v3.6.3 SAFE, cleaned)
   - Keeps all 3.6.2 rules, original values intact
   - Removes duplicate blocks
   - Adds minimal PTABLE helpers at the end
*/

/* -------- Brand color tokens -------- */
:root{
  --eastway-blue: #0B4B8C;
  --eastway-green:#0C6B4D;
  --cms-light:    #DAE9F6;

  --ink:          #0F172A;
  --ink-2:        #334155;
  --ink-3:        #64748B;
  --border:       #CBD5E1;
  --border-2:     #E2E8F0;
  --bg-subtle:    #F1F5F9;
  --card:         #FFFFFF;

  --t-green:  #10B981;
  --t-yellow: #F59E0B;
  --t-red:    #EF4444;
}

*{ box-sizing: border-box; }

html, body, #root{ height:100%; }
body{
  margin:0;
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji","Segoe UI Emoji";
  color: var(--ink);
  background: #f7fafc;
}

/* ---------- Header & Landing ---------- */
.container{ max-width:1100px; margin: 24px auto; padding: 0 16px; }
.header{
  background: linear-gradient(90deg, var(--eastway-blue), var(--eastway-green));
  color:white;
  padding: 18px 20px;
  border-radius: 16px;
  box-shadow: 0 10px 30px rgba(15,42,67,.12);
  margin-bottom: 18px;
}
.brand{ font-weight: 900; font-size: 28px; }
.subtitle{ font-weight: 700; opacity: .9; margin-top: 4px; }

.row{ display:flex; gap: 16px; align-items:center; justify-content:center; flex-wrap: wrap; }

/* ---------- Big Buttons ---------- */
.big-button,
.row > button,
.row > .button{
  font-size: 18px;
  font-weight: 900;
  padding: 16px 22px;
  border-radius: 14px;
  border: none;
  background: var(--cms-light);
  color: #05223c;
  cursor: pointer;
  box-shadow: 0 10px 20px rgba(15,42,67,.10);
}
.big-button:hover,
.row > button:hover,
.row > .button:hover{
  transform: translateY(-1px);
  box-shadow: 0 14px 26px rgba(15,42,67,.15);
}
.BigButton, .bigBtn, .big-button{ display:inline-flex; align-items:center; justify-content:center; }

/* ---------- Cards & Panes ---------- */
.panes{ display:grid; grid-template-columns: repeat(2, minmax(0, 1fr)); gap:16px; align-items:start; }
.card{
  background: var(--card);
  border: 1px solid var(--border-2);
  border-radius: 14px;
  padding: 16px;
  box-shadow: 0 2px 10px rgba(0,0,0,.04);
  min-width: 0;
}

/* ---------- Buttons ---------- */
.button{ border-radius:12px; padding:10px 14px; border:1px solid var(--border); background:#fff; cursor:pointer; font-weight:700; }
.button.primary{ background:var(--cms-light); color:#05223c; border-color:transparent; }
.button.success{ background:var(--t-green); color:white; border-color:#0ea371; }
.button.big-under{ margin-top:12px; }
.button:disabled{ background:#e2e8f0; color:#94a3b8; border-color:#e2e8f0; cursor:not-allowed; box-shadow:none; }
.floating-summary{ position:fixed; right:16px; bottom:16px; }

/* ---------- Text helpers ---------- */
.muted{ color: var(--ink-3); }
.muted.small{ font-size: .9rem; }
.mt-8{ margin-top:8px; } .mt-10{ margin-top:10px; } .ml-6{ margin-left:6px; } .ml-12{ margin-left:12px; }
.center{ justify-content:center; display:flex; }
.chips{ display:flex; flex-wrap:wrap; gap:10px; }
.chips.center{ justify-content:center; }

/* ---------- Scale Factor visuals ---------- */
.shape-area{ position:relative; }
.rects{
  display:flex; gap:32px; align-items:flex-start; justify-content:center; margin-bottom:12px;
  max-width: 100%;
  overflow: visible; /* ensure pills never clip */
}
.rect{ position:relative; background:#ffffff; border:2px solid #111827; border-radius:10px; overflow:visible; }
.rect.copy{ background:#F5FAFF; }

.shape-label-center{
  position:absolute; top:50%; left:50%; transform: translate(-50%, -50%);
  font-weight: 900; color: #b91c1c; font-size: clamp(22px, 3.8vw, 36px);
}

/* Side number tags — dynamic offset */
.side-tag{
  position:absolute; font-weight:900; background:#fff; border-radius:999px;
  border:2px solid #111827; box-shadow: 0 2px 0 rgba(0,0,0,.10); z-index:40; user-select:none; color:#0b1220;
}
.side-tag.top{    top:    calc(var(--badge-offset, 24px) * -1); left:50%; transform:translateX(-50%); padding: var(--badge-pad-v) var(--badge-pad-h); font-size: var(--badge-font); }
.side-tag.bottom{ bottom: calc(var(--badge-offset, 24px) * -1); left:50%; transform:translateX(-50%); padding: var(--badge-pad-v) var(--badge-pad-h); font-size: var(--badge-font); }
.side-tag.left{   left:   calc(var(--badge-offset, 24px) * -1); top:50%;  transform:translateY(-50%);  padding: var(--badge-pad-v) var(--badge-pad-h); font-size: var(--badge-font); }
.side-tag.right{  right:  calc(var(--badge-offset, 24px) * -1); top:50%;  transform:translateY(-50%);  padding: var(--badge-pad-v) var(--badge-pad-h); font-size: var(--badge-font); }

/* Wide click targets (Step 1 only) */
.rect .side-hit{ position:absolute; background: transparent; z-index: 20; }
.rect .side-hit.top{    top:-10px; left:0; right:0; height:34px; cursor:pointer; }
.rect .side-hit.left{   left:-10px; top:0; bottom:0; width:34px;  cursor:pointer; }
.rect .side-hit.chosen{ background: rgba(16,185,129,.18); }
.rect .side-hit.good{   background: rgba(16,185,129,.18); }

/* ---------- Fractions, chips, etc. ---------- */
.error.big-red{ color:#b91c1c; font-weight:800; font-size:1.06rem; }
.fraction-row{ display:flex; align-items:center; gap:8px; flex-wrap:wrap; }
.fraction{ display:grid; grid-template-rows: auto auto; align-items:center; justify-items:center; min-width: 120px; }
.fraction.mini-frac{ width:96px; } /* narrower to avoid wraps */
.fraction > div:first-child{ grid-row:1; }
.fraction > .frac-bar{ grid-row:2; width:100%; height:3px; background:#111827; border-radius:2px; }
.fraction > .frac-bar.narrow{ height:2px; }
.fraction > div:last-child{ grid-row:3; }
.slot{ display:inline-flex; min-width:80px; justify-content:center; border:1px dashed var(--border); border-radius:8px; padding:8px 12px; }

/* New: single-row calc alignment */
.calc-row{ display:flex; align-items:center; gap:10px; flex-wrap:nowrap; overflow-x:auto; }
.stack-op{ display:grid; grid-template-rows:auto auto; row-gap:10px; justify-items:center; min-width:72px; }
.chip-tiny{ padding:6px 10px !important; } /* tighter chips used in narrow calc row */

/* Compute grid */
.compute-grid{
  display:grid;
  grid-template-columns: minmax(120px,1fr) 24px minmax(140px,1fr) 24px minmax(140px,1fr);
  align-items:end;
  gap: 16px;
}
.compute-grid .op{ text-align:center; font-weight:900; font-size:1.2rem; }
.compute-grid .col .slot, .compute-grid .col .chip{ justify-self:center; }

.right-steps .step-title.question-xl{ font-size: 1.4rem; line-height:1.2; }
.right-steps .muted.bigger{ font-size: 1.08rem; }
.section{ margin-bottom: 20px; }

/* Chips with borders */
.chips.with-borders > *{
  border: 2px solid var(--border) !important;
  background: #fff !important;
  border-radius: 12px !important;
  padding: 8px 12px !important;
  font-weight: 800;
  cursor: grab;
  user-select: none;
  box-shadow: 0 2px 0 rgba(0,0,0,.06);
}
.chips.with-borders > *:active{ cursor: grabbing; }

.chip {
  display: inline-flex; align-items: center; justify-content: center;
  padding: 8px 12px; border: 2px solid var(--border); border-radius: 12px;
  background: #fff; font-weight: 800; cursor: grab; user-select: none;
  box-shadow: 0 2px 0 rgba(0,0,0,.06); line-height: 1;
}
.chip:active { cursor: grabbing; }
.slot .chip { border-color: #333; border-radius: 12px; background: #fff; font-weight: 800; }

/* Misc */
.fraction-row.nowrap { flex-wrap:nowrap; }
.big-fraction .frac-bar { height: 3px; }
.result-big{
  font-weight: 900; font-size: 1.6rem; color:var(--eastway-green);
  background: #fff4d6; border: 2px solid #f2c14e; border-radius: 12px; padding: 10px 14px;
}

@media (max-width: 980px){
  .panes{ grid-template-columns: 1fr; }
}

/* Flashing buttons */
.flash { animation: sfFlashBtn 1s infinite; }
@keyframes sfFlashBtn {
  0%,100%{ filter:none; transform:none; }
  50%{ filter: drop-shadow(0 0 6px rgba(245,158,11,.55)); transform: translateY(-1px); }
}

/* --- fade-in helpers for staged calc --- */
.sf-hidden{ opacity:0; pointer-events:none; }
.sf-fade{ animation: sfFadeIn .6s ease-out both; }
@keyframes sfFadeIn{ from{ opacity:0; transform: translateY(4px); } to{ opacity:1; transform:none; } }

/* --- continuous confetti --- */
.sf-confetti{ position:fixed; inset:0; pointer-events:none; z-index:1000; overflow:hidden; }
.sf-confetti-piece{
  position:absolute; top:-10vh; border-radius:2px; opacity:.95;
  animation-name: sfConfettiFall; animation-timing-function: linear; animation-fill-mode: forwards;
}
@keyframes sfConfettiFall{ to{ transform: translateY(110vh) rotate(360deg); opacity:.25; } }

/* ---- Restored utility & landing styles ---- */
.landing-header{ text-align:center; }
.landing-title{ font-size: clamp(36px, 6vw, 54px); margin-bottom: 6px; }
.landing-subtitle{ font-size: clamp(18px, 3vw, 22px); font-weight: 800; }
.home-buttons > *{
  font-size: 22px !important; padding: 20px 28px !important; border-radius: 16px !important;
  min-width: 240px; justify-content:center; text-align:center;
}

/* ---- H-Table grid & visuals ---- */
.hwrap{ margin-top:12px; position: relative; border: none !important; background: transparent; }
.hgrid{
  display:grid; grid-template-columns: repeat(3, 1fr); grid-auto-rows: minmax(64px, auto);
  gap:0; background:#fff;
}
.hhead, .hcell{ padding:10px; }
.hhead{ font-weight:800; display:flex; align-items:center; justify-content:center; }
.hcell{ position:relative; display:flex; align-items:center; justify-content:center; }
.hgrid .hstroke { pointer-events: none; }

.hwrap .hline { position: absolute; pointer-events: none; }
.hwrap .hline.horiz { left: 0; right: 0; top: 50%; border-top: 4px solid #334155; transform: translateY(-2px); }
.hwrap .hline.vert1 { top: 0; bottom: 0; left: 33.333%; border-left: 4px solid #334155; transform: translateX(-2px); }
.hwrap .hline.vert2 { top: 0; bottom: 0; left: 66.666%; border-left: 4px solid #334155; transform: translateX(-2px); }

/* H-Table drop affordance */
.hwrap .empty { outline: 2px dashed #94a3b8; outline-offset: -6px; border-radius: 10px; }
.hwrap .hhead .empty, .hwrap .hcell .empty {
  background: repeating-linear-gradient(45deg, rgba(148,163,184,.15), rgba(148,163,184,.15) 6px, transparent 6px, transparent 12px);
}

/* Toolbar row parity & language badge */
.htable-toolbar { justify-content: center; margin-top: 10px; gap: 12px; display:flex; }
.lang-badge{
  margin-top: 8px; display: inline-block; font-size: 12px; color: var(--ink-2);
  background: var(--bg-subtle); border: 1px solid var(--border-2); border-radius: 10px; padding: 4px 8px;
}

/* Minimal helpers to restore expected layout */
.section { margin-top: 16px; }
.right-steps { padding: 12px; }
.step-title { font-weight: 700; margin-bottom: 8px; }
.bigger { font-size: 15px; }
.hhead-text { font-weight: 600; } /* used in H-table headings */

/* ---------- Proportional Tables (PTABLE) ---------- */
/* Darker table chrome */
.ptable-wrap{ border:1px solid var(--border-2); border-radius:12px; overflow:hidden; background:#fff; }
.ptable{ width:100%; border-collapse:collapse; }
.ptable thead th{
  background:#e5e7eb; /* darker */
  border-bottom:2px solid #cbd5e1;
  padding:10px;
  text-align:center; font-weight:800; font-size:15px;
}
.ptable tbody td{ border-top:1px solid #cbd5e1; padding:10px; text-align:center; height:60px; }
.ptable th, .ptable td{ border-right:1px solid #cbd5e1; }
.ptable tr > *:last-child{ border-right:none; }

/* Header drop slots */
.ptable-thslot{
  display:flex; align-items:center; justify-content:center;
  height:44px; border:1px dashed var(--border); border-radius:10px; background:#f8fafc;
  font-weight:700;
}
.ptable-thslot.placed{ background:#e8f1ff; border-color:#cbd5e1; font-style:normal; }
.ptable-thslot.empty{ color:#94a3b8; font-style:italic; }

/* Header equation area (below K header) */
.ptable-header-eq{ margin-top:8px; }
.ptable-eq-row{ display:flex; gap:8px; align-items:center; justify-content:center; flex-wrap:wrap; }
.ptable-eq-slot{
  min-width:56px; height:40px; border:1px dashed var(--border);
  border-radius:8px; display:flex; align-items:center; justify-content:center; background:#fff;
}
.ptable-eq-slot.filled{ border-style:solid; }
.ptable-frac-template-slot{
  min-width:100px; height:40px; border:1px dashed var(--border);
  border-radius:8px; display:flex; align-items:center; justify-content:center; background:#fff;
}

/* Fraction slots (header & rows) */
.ptable-fracslot{
  min-width:64px; min-height:40px; border:2px solid var(--border);
  background:#fff; border-radius:8px;
}

/* Keep the 3rd column width before K is dropped (reserve space without content) */
.col3-invisible .ptable thead th:nth-child(3),
.col3-invisible .ptable tbody td:nth-child(3){ visibility: hidden; }

/* (Legacy) If needed elsewhere: hide third column entirely */
.col3-hidden .ptable thead th:nth-child(3),
.col3-hidden .ptable tbody td:nth-child(3){ display:none; }

/* Generous invisible dropzone for K (no label) */
.ptable-rel{ position:relative; }
.ptable-k-overlay{ position:absolute; top:0; left:66.6667%; right:0; height:88px; display:flex; align-items:center; justify-content:center; pointer-events:none; }
.ptable-k-target{ pointer-events:auto; width:95%; height:64px; border:0; border-radius:12px; background:transparent; }
.ptable-k-target *{ display:none !important; }

/* Proportional overlay between columns 1 & 2 */
.ptable-overlay{
  position:absolute; top:50%; left:8%; right:8%; transform:translateY(-50%);
  display:flex; align-items:center; justify-content:center; pointer-events:none;
}
.ptable-overlay-inner{
  background: rgba(255,255,255,.9); border:2px solid #f2c14e; border-radius:14px;
  padding: 10px 14px; box-shadow:0 6px 18px rgba(0,0,0,.08);
  display:flex; gap:10px; align-items:center;
}

/* Larger chips for right-pane */
.chip.large{ padding: 12px 16px; font-size: 18px; }

/* Active difficulty helpers */
.big-button.active{ outline:3px solid var(--eastway-blue); } /* if BigButton forwards className */
.press.is-active > .big-button{ outline:3px solid var(--eastway-blue); outline-offset:2px; } /* wrapper fallback */

/* Reserve space for the 3rd column but hide all visuals until K is placed */
.col3-invisible .ptable thead th:nth-child(3),
.col3-invisible .ptable tbody td:nth-child(3){
  visibility: hidden;
  background: transparent;
  border-color: transparent;   /* hide the “outlines” */
}

/* Make the K-reveal dropzone truly invisible (no label or border) */
.ptable-k-target { background: transparent; border: 0; }
.ptable-k-target * { display: none !important; }

/* Active difficulty look (works if BigButton forwards className) */
.big-button.active{ outline:3px solid var(--eastway-blue); }

/* Fallback active look if BigButton doesn't forward className */
.press.is-active > .big-button{
  outline:3px solid var(--eastway-blue);
  outline-offset:2px;
}

/* Equal column widths even when K column is visually hidden */
.ptable { table-layout: fixed; }
.ptable col { width: 33.3333%; }

/* Guarantee header drop targets get the event */
.ptable thead, .ptable thead * {
  pointer-events: auto;
  position: relative;
  z-index: 2;
}

/* Stacked fraction: numerator | bar | denominator */
.fraction{
  display: grid;
  grid-template-rows: auto auto auto; /* was: auto auto */
  align-items: center;
  justify-items: center;
  min-width: 120px;
}

/* DropSlot visual cue */
.slot.glow {
  box-shadow: 0 0 0 3px rgba(37, 99, 235, .25) inset;
  border-color: #93c5fd;
}

/* Keep the K header on one horizontal line */
.ptable-eq-row.nowrap { flex-wrap: nowrap; }
.ptable .calc-inline { white-space: nowrap; }

/* Smaller button in row cells to avoid overflow */
.button.sm { padding: 6px 10px; font-size: 12px; }

/* Ensure header drop targets always receive events */
.ptable thead, .ptable thead * { pointer-events: auto; position: relative; z-index: 2; }

/* Stacked fraction grid explicit (avoids odd wraps) */
.fraction { grid-template-rows: auto auto auto; }

/* Optional: subtle glow cue when a slot is a valid drop target */
.slot.glow { box-shadow: 0 0 0 3px rgba(37, 99, 235, .25) inset; border-color: #93c5fd; }

/* Keep header equation on one line, compact */
.ptable-eq-row.nowrap { flex-wrap: nowrap; gap: 6px; }
.ptable .calc-inline { white-space: nowrap; }

/* Compact slots for the header fraction so it never wraps */
.ptable .ptable-fracslot.tiny { min-width: 42px; min-height: 30px; }

/* Explicit 3-row grid for stacked fractions (prevents odd wrapping) */
.fraction { grid-template-rows: auto auto auto; }

/* Make table cells show everything; avoid clipping and cut-off buttons */
.ptable tbody td { overflow: visible; }

/* Small button used inside cells */
.button.sm { padding: 6px 10px; font-size: 12px; }

/* Ensure header drop targets always receive events */
.ptable thead, .ptable thead * { pointer-events: auto; position: relative; z-index: 2; }

/* Optional: subtle glow when a slot is an active drop target */
.slot.glow { box-shadow: 0 0 0 3px rgba(37, 99, 235, .25) inset; border-color: #93c5fd; }

/* Keep header equation on one line, compact */
.ptable-eq-row.nowrap { flex-wrap: nowrap; gap: 6px; }
.ptable .calc-inline { white-space: nowrap; }

/* Compact header fraction slots so the K header never wraps */
.ptable .ptable-fracslot.tiny { min-width: 42px; min-height: 30px; padding: 4px 6px; }

/* Explicit 3-row grid for stacked fractions (prevents odd wrapping) */
.fraction { grid-template-rows: auto auto auto; }

/* Row calc group stays inside the third column and wraps nicely */
.row-calc { display:flex; align-items:center; justify-content:center; gap:8px; flex-wrap:wrap; max-width:100%; }
.row-calc .fraction.mini-frac { width:72px; }           /* compact fractions */
.ptable .ptable-fracslot { min-width: 36px; min-height: 28px; padding:4px 6px; } /* tighter slots in rows */

/* Buttons fit and never look disabled */
.button.sm { padding: 6px 10px; font-size: 12px; white-space: nowrap; }

/* Ensure header drop targets always receive events */
.ptable thead, .ptable thead * { pointer-events: auto; position: relative; z-index: 2; }

/* Optional: subtle glow when a slot is an active drop target */
.slot.glow { box-shadow: 0 0 0 3px rgba(37,99,235,.25) inset; border-color: #93c5fd; }

/* Keep header equation on one line, compact */
.ptable-eq-row.nowrap { flex-wrap: nowrap; gap: 6px; }
.ptable .calc-inline { white-space: nowrap; }

/* Header fraction: small slots so it never wraps */
.ptable .ptable-fracslot.tiny { min-width: 38px; min-height: 28px; padding: 3px 6px; }

/* Row calc: force single line, compact; stay inside col 3 */
.row-calc.nowrap { display:flex; align-items:center; justify-content:center; gap:8px; flex-wrap: nowrap; max-width:100%; overflow:hidden; }

/* Compact fractions & thin divisor bars */
.fraction { grid-template-rows: auto auto auto; }
.fraction.mini-frac { width: 64px; }
.frac-bar.narrow { height: 2px; }
.row-calc .frac-bar.extra-narrow { height: 1px; }

/* Tight row slots so y_i / x_i aren't wide */
.ptable .ptable-fracslot.tight { min-width: 32px; min-height: 28px; padding: 3px 6px; }

/* Keep chip look when dropped into slots */
.slot .chip { border-color: var(--border); background:#fff; font-weight:800; line-height:1; }
.chip-tiny { padding: 6px 10px !important; font-size: 14px; }

/* Make left Y/X bold (when not chips) */
.fraction.static strong { font-weight: 900; }

/* Ensure header drop targets always receive events */
.ptable thead, .ptable thead * { pointer-events: auto; position: relative; z-index: 2; }

/* === Short, fixed-length fraction bars (header + rows) === */
/* Make the compact fractions truly compact (override the generic min-width) */
.fraction.mini-frac { width: 72px !important; min-width: 0 !important; }

/* Bar length ~3 digits wide */
.fraction.mini-frac .frac-bar { width: 52px !important; }

/* Extra insurance: keep header version short too */
.ptable-header-eq .fraction.mini-frac { width: 72px !important; }
.ptable-header-eq .fraction.mini-frac .frac-bar { width: 52px !important; }

/* Keep the third-column calc content on one line */
.row-calc.nowrap { flex-wrap: nowrap !important; }

/* (Optional) if any row still stretches, limit the whole group width */
.ptable tbody td:nth-child(3) .row-calc.nowrap { max-width: 100%; overflow: hidden; }

/* ---- PTables layout + fraction compacting (append to end of CSS) ---- */
.ptables-layout { grid-template-columns: 3fr 2fr; }

/* Compact fractions (~3 digits) */
.fraction.mini-frac { width: 64px !important; min-width: 0 !important; }
.fraction.mini-frac .frac-bar { width: 48px !important; }

/* Keep calc row on one line inside col 3 */
.row-calc.nowrap { flex-wrap: nowrap !important; gap: 8px; max-width: 100%; overflow: hidden; }

/* Tiny header slots so K header doesn't wrap */
.ptable .ptable-fracslot.tiny { min-width: 34px; min-height: 26px; padding: 2px 6px; }

/* Keep dropped chips styled as chips */
.slot .chip { border-color: var(--border); background:#fff; font-weight:800; line-height:1; }

/* Very thin divisor */
.frac-bar.extra-narrow { height: 1px; }

/* Tap-to-place: show focus when a chip is tapped (optional) */
.chip:focus { outline: 2px solid var(--eastway-blue); outline-offset: 2px; }

/* ==== APPEND to styles.css (PTables scoped additions) — v7.6 ==== */
.ptables-layout .visually-hidden{position:absolute!important;width:1px;height:1px;margin:-1px;border:0;padding:0;white-space:nowrap;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden}

/* Concept answers: always display as 2×2 grid */
.ptables-layout .concept-grid{
  display:grid; grid-template-columns: repeat(2, minmax(220px, 1fr));
  gap:10px; justify-content:center; align-items:start; max-width:520px; margin:0 auto;
}
.ptables-layout .concept-grid .button{ width:100%; }

/* Header slots look empty (no literal text) when not placed */
.ptables-layout .ptable-thslot.empty{ color: #94a3b8; font-style: italic; }
.ptables-layout .ptable-thslot.empty > *{ pointer-events:none; }



/* ==== APPEND (PTables) v7.8: concept grid & minor fixes ==== */
.ptables .ptable-concept-choices{display:grid;grid-template-columns:repeat(2,minmax(120px,1fr));gap:10px;justify-content:center;max-width:420px;margin:0 auto}
.ptables .ptable-concept-choices .button{width:100%}


/* === ptables v7.8.3 append: ensure lowercase rendering + 2x2 concept grid === */
.ptable-module .chip, .ptables .chip, .ptable .chip { text-transform: none; }
.ptables .ptable-concept-choices{display:grid;grid-template-columns:repeat(2,minmax(140px,1fr));gap:12px;justify-content:center;max-width:480px;margin:0 auto}
.ptables .ptable-concept-choices .button{width:100%}

/* styles.append.ptables.v7.9.css */
/* Append to bottom of your styles.css */
/* Scoped to .ptable-module */

.ptable-module table, 
.ptable-module th, 
.ptable-module td {
  border: 2px solid #444; /* thicker/darker borders */
}

.ptable-module .confetti-fullpage {
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  pointer-events: none;
  z-index: 9999;
}


/* ==== APPEND (PTables) v7.9: borders + concept grid + last-row parity ==== */
.ptables .ptable th,
.ptables .ptable td{
  border-color:#94a3b8!important;
  border-width:1.5px!important;
}
.ptables .ptable-concept-choices{display:grid;grid-template-columns:repeat(2,minmax(120px,1fr));gap:10px;justify-content:center;max-width:420px;margin:0 auto}
.ptables .ptable-concept-choices .button{width:100%}
.ptables .ptable tbody tr:last-child td{
  border-top:1.5px solid #94a3b8;
  padding:10px;
  height:60px;

}
/* styles.css — UG Math Tools v8.1 (PTables patches)
   PATCH SUMMARY:
   - Larger header slots
   - Fun-but-subtle blink effect for guided label step
   - Wrong-answer micro-shake
   - Button-like choice style for "What goes here?" chips
   - Keep all rules scoped to PTables to avoid leaks
*/

:root{
  --eastway-blue: #0B4B8C;
  --eastway-green:#0C6B4D;
  --cms-light:    #DAE9F6;

  --ink:          #0F172A;
  --ink-2:        #334155;
  --ink-3:        #64748B;
  --border:       #CBD5E1;
  --border-2:     #E2E8F0;
  --bg-subtle:    #F1F5F9;
  --card:         #FFFFFF;

  --t-green:  #10B981;
  --t-yellow: #F59E0B;
  --t-red:    #EF4444;
}

/* --- Keep user's existing styles (v8.0) by importing them into this file --- */
/* For this downloadable file, we include only the incremental overrides and additions. */
/* Apply these at the BOTTOM of your existing styles to reach v8.1 behavior. */

/* ==== Overrides ==== */
.ptable-thslot{
  display:flex; align-items:center; justify-content:center;
  height:52px; /* v8.1: larger target */
  border:1px dashed var(--border); border-radius:10px; background:#f8fafc;
  font-weight:700;
}

/* ==== Additions (append) ==== */

/* Guided label step: fun-but-subtle blink */
.ptable-blink{
  animation: ptableBlink 1.2s ease-in-out infinite;
}
@keyframes ptableBlink{
  0%,100%{ box-shadow: 0 0 0 0 rgba(37,99,235,.0); transform:none; }
  50%{ box-shadow: 0 0 0 4px rgba(37,99,235,.20) inset, 0 0 12px rgba(37,99,235,.25); transform: translateY(-1px); }
}

/* Wrong-answer micro-shake */
.shake{ animation: ptableShake .35s ease both; }
@keyframes ptableShake{
  0%,100%{ transform: translateX(0); }
  20%{ transform: translateX(-3px); }
  40%{ transform: translateX(3px); }
  60%{ transform: translateX(-2px); }
  80%{ transform: translateX(2px); }
}

/* Choice buttons (button-like, but not the same as .button) */
.ptable-choice{
  display:inline-flex; align-items:center; justify-content:center;
  padding: 10px 16px;
  border-radius: 12px;
  border: 2px solid var(--border);
  background: #fff;
  font-weight: 900;
  font-size: 18px;
  line-height: 1;
  cursor: pointer;
  user-select: none;
  box-shadow: 0 2px 0 rgba(0,0,0,.06);
}
.ptable-choice:hover{ transform: translateY(-1px); box-shadow: 0 6px 14px rgba(0,0,0,.10); }

/* Accessibility helper text only for screen readers */
.visually-hidden{ position:absolute!important; width:1px; height:1px; margin:-1px; border:0; padding:0; clip:rect(0 0 0 0); clip-path:inset(50%); overflow:hidden; }

/* Disable all chip interactions during label step */
.ptable-wrap.disable-dnd .chip{ pointer-events:none; opacity:.7; }

   /* styles.css — PTables v8.1.1 appends */
/* Stronger blink; ensure placed header labels are visible and prominent */

.ptable-thslot.placed { background:#e8f1ff; border-color:#93c5fd; color:#0b1220; }
.ptable-thslot.placed .chip { background:#fff; border-color:#93c5fd; font-weight:900; }
.ptable-thslot.empty { color:#64748b; }

/* Stronger blink: border + subtle scale + glow */
.ptable-blink{
  animation: ptableBlinkStrong 1.05s ease-in-out infinite;
}
@keyframes ptableBlinkStrong{
  0%,100%{ box-shadow: 0 0 0 0 rgba(59,130,246,.0); transform:none; border-color:#cbd5e1; }
  50%{ box-shadow: 0 0 0 5px rgba(59,130,246,.25) inset, 0 0 14px rgba(59,130,246,.25);
       transform: translateY(-1px) scale(1.01); border-color:#93c5fd; }
}

   /* styles.css — PTables v8.2 appends */
/* Strong, unmistakable blink; larger table chips; larger choice buttons */

.ptable-thslot{
  /* keep previous overrides; ensure visibility */
  font-size: 18px;
}

.ptable-thslot.placed { background:#e8f1ff; border-color:#93c5fd; color:#0b1220; }
.ptable-thslot.placed .chip { background:#fff; border-color:#93c5fd; font-weight:900; }
.ptable-thslot.empty { color:#64748b; }

/* VERY STRONG blink used across label/build/fill target slots */
.ptable-blink-hard{
  animation: ptableBlinkHard .85s ease-in-out infinite;
  outline: 3px solid #3b82f6;
  outline-offset: 2px;
  position: relative;
}
.ptable-blink-hard::after{
  content:"";
  position:absolute; inset:-6px;
  border:3px dashed rgba(59,130,246,.75);
  border-radius:12px;
  animation: ptableDash 1.2s linear infinite;
  pointer-events:none;
}
@keyframes ptableBlinkHard{
  0%,100%{ box-shadow: 0 0 0 0 rgba(59,130,246,.0); transform:none; background:#fff; }
  50%{ box-shadow: 0 0 0 8px rgba(59,130,246,.25) inset, 0 0 18px rgba(59,130,246,.30);
       transform: translateY(-1px) scale(1.02); background:#f0f7ff; }
}
@keyframes ptableDash{
  to { transform: rotate(1turn); }
}

/* Larger in-cell chips for header/rows */
.chip.chip-med{
  display:inline-flex; align-items:center; justify-content:center;
  padding: 8px 12px; border-radius: 12px;
  border: 2px solid var(--border);
  background:#fff; font-weight:900; font-size: 18px; line-height:1;
}

/* Choice buttons: big size */
.ptable-choice.big{
  padding: 14px 20px;
  font-size: 20px;
  border-width: 2px;
  border-radius: 14px;
  box-shadow: 0 3px 0 rgba(0,0,0,.08);
}
.ptable-choice.big:hover{ transform: translateY(-1px); box-shadow: 0 10px 16px rgba(0,0,0,.12); }

/* Disable all chip interactions during guided steps */
.ptable-wrap.disable-dnd .chip{ pointer-events:none; opacity:.7; }

/* styles.css — PTables v8.2.1 appends (stack on top of v8.2) */
/* Strong pulsating marker + bigger chips + ensure slots are positioned relative */

.ptable-thslot{ position: relative; }               /* allow pulse overlay */
.slot.ptable-fracslot{ position: relative; }        /* allow pulse overlay */

.chip.chip-lg{
  display:inline-flex; align-items:center; justify-content:center;
  padding: 10px 14px;
  border-radius: 12px;
  border: 2px solid var(--border);
  background:#fff;
  font-weight: 900;
  font-size: 20px;
  line-height: 1;
}

/* Pulsing target marker (very obvious) */
.ptable-pulse{
  position:absolute; left:50%; top:50%; transform:translate(-50%,-50%);
  width: 26px; height: 26px; border-radius: 50%;
  border: 4px solid rgba(59,130,246,.9);
  box-shadow: 0 0 0 6px rgba(59,130,246,.25), 0 0 18px rgba(59,130,246,.4);
  animation: ptablePulseRing 0.9s ease-in-out infinite;
  pointer-events:none;
}
@keyframes ptablePulseRing{
  0%   { transform: translate(-50%,-50%) scale(0.95); opacity: 1; }
  50%  { transform: translate(-50%,-50%) scale(1.08); opacity: 0.9; }
  100% { transform: translate(-50%,-50%) scale(0.95); opacity: 1; }
}

   /* styles.css — PTables v8.2.2 appends (stack on top) */
/* Make blinking unmissable + keep table height stable while chips get larger */

.ptable-thslot, .slot.ptable-fracslot { overflow: visible; } /* allow pulse to draw outside if needed */

/* Background flashing to complement halo/pulse (works even if effects are subtle on theme) */
.blink-bg{
  animation: ptableBlinkBG 0.9s linear infinite;
}
@keyframes ptableBlinkBG{
  0%,100% { background: #ffffff; }
  50%     { background: #fff7cc; } /* pale yellow flash */
}

/* Make the pulse scale relative to container size for visibility */
.ptable-pulse{
  width: clamp(26px, 45%, 40px);
  height: clamp(26px, 45%, 40px);
  border-width: 4px;
}

/* Keep table layout steady even as chips grow */
.pTable td, .pTable th { vertical-align: middle; }
.pTable .chip-lg{ line-height: 1; }
/* If your table uses a fixed row height elsewhere, this keeps chips centered without expanding rows */

   /* styles.css — PTables v8.2.3 appends */
/* Enforce blink visibility & layering; restore fade-in on revealed k; full-screen confetti fallback */

.ptable-thslot, .slot.ptable-fracslot { position: relative !important; overflow: visible !important; }

/* Make halos & pulses sit above contents, regardless of other shadows */
.ptable-blink-hard, .blink-bg { z-index: 2 !important; }
.ptable-pulse { z-index: 3 !important; }

/* Stronger background flash (even on bright themes) */
.blink-bg{
  animation: ptableBlinkBG 0.8s linear infinite !important;
}
@keyframes ptableBlinkBG{
  0%,100% { background: #ffffff; }
  50%     { background: #fff0b3; } /* brighter pale yellow */
}

/* Fade-in for revealed k values */
.eq.result.reveal-value{
  opacity: 0;
  animation: kReveal 0.5s ease-out forwards;
}
@keyframes kReveal { to { opacity: 1; } }

/* Full-screen confetti fallback */
.sf-confetti{ position: fixed; inset: 0; pointer-events:none; overflow: visible; z-index: 9999; }
.sf-confetti-piece{
  position:absolute; top:-8vh;
  animation: confFall linear forwards;
  transform: translateY(0) rotate(0);
}
@keyframes confFall{
  to { transform: translateY(108vh) rotate(720deg); }
}
/* styles.css — PTables v8.2.5 append: make blink unmistakable */
.ptable-thslot, .slot.ptable-fracslot { position: relative !important; overflow: visible !important; }
.ptable-blink-hard, .blink-bg { z-index: 5 !important; }
.ptable-pulse{ z-index: 6 !important; width: clamp(28px, 50%, 44px); height: clamp(28px, 50%, 44px); border-width: 4px; }

/* very visible background flash + outline */
.blink-bg{ animation: ptableBlinkBG 0.8s linear infinite !important; outline: 3px solid #f59e0b !important; outline-offset: 2px !important; box-shadow: 0 0 0 6px rgba(245,158,11,0.25) !important; }
@keyframes ptableBlinkBG{ 0%,100% { background:#fff; } 50% { background:#fff0b3; } }

   /* === Force blink styles to win (append to bottom of styles.css) === */
.slot.ptable-blink-hard,
.slot.blink-bg,
.ptable-thslot.ptable-blink-hard,
.ptable-thslot.blink-bg,
.ptable-fracslot.ptable-blink-hard,
.ptable-fracslot.blink-bg {
  background: #fff0b3 !important; /* pale yellow flash */
  border-color: #f59e0b !important;
  box-shadow: 0 0 0 6px rgba(245,158,11,0.45) !important;
  outline: 3px solid #f59e0b !important;
  outline-offset: 2px !important;
  z-index: 10 !important;
}

/* styles.css — v8.2.6 append: wrapper-level blink that overrides everything */
.slot-wrap{ position: relative !important; overflow: visible !important; }
.slot-wrap.ptable-blink-wrap::after{
  content: "";
  position: absolute;
  inset: -6px;
  border-radius: 10px;
  border: 4px solid #f59e0b;
  box-shadow: 0 0 0 6px rgba(245,158,11,0.45);
  animation: wrapBlink 0.7s linear infinite;
  pointer-events: none;
  z-index: 9999;
}
@keyframes wrapBlink{
  0%,100% { opacity: 0.25; }
  50% { opacity: 1; }
}



/* === v8.3.0 PTables: soften blink, keep guidance clear === */
.ptable-blink-hard,
.ptable-fracslot.ptable-blink-hard,
.ptable-thslot.ptable-blink-hard,
.slot.ptable-blink-hard {
  /* softer outline + smaller halo + slower */
  outline: 2px solid #3b82f6 !important;
  outline-offset: 2px !important;
  box-shadow: 0 0 0 4px rgba(59,130,246,.18) !important;
  animation: ptableBlinkSoft 1.2s ease-in-out infinite !important;
}

@keyframes ptableBlinkSoft {
  0%,100% { transform: none; background: #fff; }
  50%     { transform: translateY(-1px); background: #f5faff; }
}

/* remove the strong yellow flash variant */
.blink-bg {
  animation: ptableBlinkBGSoft 1.2s ease-in-out infinite !important;
  outline: none !important;
  box-shadow: 0 0 0 3px rgba(59,130,246,.18) !important;
}
@keyframes ptableBlinkBGSoft {
  0%,100% { background: #fff; }
  50%     { background: #f0f7ff; }
}

/* === v8.3.0 PTables: prevent clipping in col 3 === */
.ptable-wrap { overflow: visible !important; }
.ptable { overflow: visible; }
.ptable tbody td { overflow: visible !important; }

.row-calc { 
  flex-wrap: wrap;
  gap: 8px;
  max-width: 100%;
  overflow: visible; 
}

/* compact the mini fractions slightly to fit nicer */
.fraction.mini-frac { width: 60px !important; }
.fraction.mini-frac .frac-bar { width: 44px !important; }

/* === v8.3.0 PTables: make the K drop target visible & above === */
.ptable-rel { position: relative; overflow: visible; }
.ptable-k-overlay { 
  position: absolute; top: 0; left: 66.6667%; right: 0; height: 88px;
  display: flex; align-items: center; justify-content: center;
  pointer-events: none;
  z-index: 6;
}
.ptable-k-target { 
  pointer-events: auto; width: 95%; height: 64px; border: 0; border-radius: 12px; 
  background: transparent;
}
.col3-invisible .ptable-k-overlay { visibility: visible !important; }


/* =======================
   PTables v8.3.1 micro‑overrides
   - Neutralize old strong yellow blink (v8.2.5 "force" block)
   - Ensure K target blinks even when column 3 is invisible
   - Raise overlay z-index to sit above header
   ======================= */

/* 1) Calm down ALL strong blink variants within PTables scope */
.ptables .ptable-thslot.ptable-blink-hard,
.ptables .ptable-fracslot.ptable-blink-hard,
.ptables .slot.ptable-blink-hard,
.ptables .ptable-thslot.blink-bg,
.ptables .ptable-fracslot.blink-bg,
.ptables .slot.blink-bg,
.ptables .ptable-blink-hard,
.ptables .blink-bg {
  background: #fff !important;
  border-color: #93c5fd !important;
  outline: 2px solid #3b82f6 !important;
  outline-offset: 2px !important;
  box-shadow: 0 0 0 4px rgba(59,130,246,.18) !important;
  animation: ptableBlinkSoft 1.2s ease-in-out infinite !important;
}

/* Remove the rotating dashed ring entirely */
.ptables .ptable-blink-hard::after { content: none !important; display:none !important; }

/* 2) Make the K drop target blink visibly while the third column is reserved */
.ptable-k-overlay { z-index: 12 !important; } /* higher than header */
.col3-invisible .ptable-k-target::before {
  content: "";
  position: absolute;
  inset: -6px;
  border-radius: 12px;
  border: 2px solid #3b82f6;
  box-shadow: 0 0 0 4px rgba(59,130,246,.18);
  animation: ptableBlinkSoft 1.2s ease-in-out infinite;
  pointer-events: none;
}

/* 3) Safety: ensure no clipping anywhere around the target */
.ptable-rel, .ptable, .ptable-wrap, .ptable thead, .ptable tbody td, .slot { 
  overflow: visible !important; 
}

/* =========================
   PTables v8.3.2 micro‑overrides (append at absolute bottom)
   - Calm down legacy "force yellow" blink (wins by selector match + !important)
   - Make 3rd-column HEADER visible during K step (body stays hidden)
   - Ensure no clipping of halos
   ========================= */

/* 0) Unhide 3rd-column HEADER while col-3 is reserved */
.col3-invisible .ptable thead th:nth-child(3){
  visibility: visible !important;     /* body cells remain hidden by existing rule */
}
/* keep the actual slot visible in header, so the hint can blink */
.col3-invisible .ptable thead th:nth-child(3) .ptable-thslot{
  visibility: visible !important;
}

/* 1) Replace the STRONG yellow blink with soft blue for ALL cases */
.slot.ptable-blink-hard,
.slot.blink-bg,
.ptable-thslot.ptable-blink-hard,
.ptable-thslot.blink-bg,
.ptable-fracslot.ptable-blink-hard,
.ptable-fracslot.blink-bg {
  background: #fff !important;
  border-color: #93c5fd !important;
  outline: 2px solid #3b82f6 !important;
  outline-offset: 2px !important;
  box-shadow: 0 0 0 4px rgba(59,130,246,.18) !important;
  animation: ptableBlinkSoft 1.15s ease-in-out infinite !important;
}
/* Remove rotating dashed ring if any */
.ptable-blink-hard::after { content: none !important; display:none !important; }

@keyframes ptableBlinkSoft {
  0%,100% { transform: none; background: #fff; }
  50%     { transform: translateY(-1px); background: #f5faff; }
}

/* 2) Ensure K header blink is above table chrome; avoid clipping */
.ptable thead, .ptable thead *, .ptable-thslot, .slot { 
  position: relative; 
  z-index: 3; 
  overflow: visible !important;
}

/* 3) Compact the small fractions slightly (safety for narrow screens) */
.fraction.mini-frac { width: 64px !important; min-width: 0 !important; }
.fraction.mini-frac .frac-bar { width: 48px !important; }

/* =========================
   PTables v8.3.3 micro‑overrides (append at bottom of styles.css)
   - Precisely center the blue pulse ring
   - Avoid clipping in header/row cells
   - Remove blink-induced vertical jitter
   ========================= */

/* Ensure slots are the positioning context for the pulse ring */
.ptable-thslot,
.slot.ptable-fracslot,
.slot {
  position: relative !important;
  overflow: visible !important;
}

/* Centered pulse ring sized to fit *inside* the slot padding box */
.ptable-pulse {
  position: absolute !important;
  left: 50% !important;
  top: 50% !important;
  transform: translate(-50%, -50%) !important;
  /* Stay inside the slot to avoid cut-off by borders/radii */
  width: calc(100% - 12px) !important;
  height: calc(100% - 12px) !important;
  max-width: 44px !important;
  max-height: 36px !important;
  border-radius: 999px !important;
  pointer-events: none !important;
  box-shadow: 0 0 0 6px rgba(59,130,246,.22) !important;
}

/* Remove the subtle Y-translation that could make the pulse appear off-center */
.ptable-blink-hard,
.blink-bg {
  transform: none !important;
}

/* Keep fraction areas from clipping the ring */
.row-calc, .fraction, .ptable tbody td, .ptable thead th {
  overflow: visible !important;
}

/* ==== v8.4.0 Landing Tiles (scoped) ===================================== */
.home-buttons { gap: 22px; }

/* Ensure we can precisely target only the landing tiles */
.home-buttons .big-button,
.home-buttons .tile-btn {
  /* Tile look */
  min-width: 260px;
  min-height: 140px;        /* square-ish without going full card */
  border-radius: 18px;

  /* Color: match header vibe with gradient */
  color: #fff;
  background: linear-gradient(135deg, var(--eastway-blue) 0%, var(--eastway-green) 100%);

  /* Stronger float/elevation + smoother transitions */
  box-shadow: 0 16px 34px rgba(11, 75, 140, 0.24), 0 6px 16px rgba(12, 107, 77, 0.18);
  transition: transform .18s ease, box-shadow .18s ease, filter .18s ease;

  /* Center contents nicely for taller tiles */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;
}

/* Hover: clearer visual confirmation (addressing “I can barely see it change”) */
.home-buttons .big-button:hover,
.home-buttons .tile-btn:hover {
  transform: translateY(-3px) scale(1.015);
  box-shadow: 0 26px 56px rgba(11, 75, 140, 0.34), 0 10px 28px rgba(12, 107, 77, 0.26);
  filter: saturate(1.05);
}

/* Active/press: quick depth pop without sticking */
.home-buttons .big-button:active,
.home-buttons .tile-btn:active {
  transform: translateY(-1px) scale(0.997);
  box-shadow: 0 16px 30px rgba(11, 75, 140, 0.28), 0 6px 16px rgba(12, 107, 77, 0.22);
}

/* Responsive sizing so tiles don’t become comically huge/small */
@media (max-width: 980px){
  .home-buttons .big-button,
  .home-buttons .tile-btn {
    min-width: 220px;
    min-height: 120px;
  }
}
@media (max-width: 640px){
  .home-buttons .big-button,
  .home-buttons .tile-btn {
    min-width: 100%;
    min-height: 100px;
  }
}
/* === OpSpec v9.6.1 UI Overrides (tap-only + layout) === */
.panes{ grid-template-columns: 2fr 1fr !important; }

.chips.with-borders > *{ cursor: pointer !important; }
.chip{ cursor: pointer !important; }
.chips.with-borders > *:active{ cursor: pointer !important; }

/* Make blink more obvious */
@keyframes ptable-blink-kf { 
  0%, 20%, 40%, 60%, 80%, 100% { box-shadow: 0 0 0 0 rgba(59,130,246, .0); }
  10%, 30%, 50%, 70%, 90% { box-shadow: 0 0 0 4px rgba(59,130,246, .35); }
}
.ptable-blink { animation: ptable-blink-kf 2s ease-out 0s 1; }

.problem-body { font-size: inherit !important; line-height: inherit !important; color: inherit !important; }

/* styles_overrides_opspec961.css – append or import after your main css */

/* Roomier working pane (left wider than right) */
.panes{ grid-template-columns: 2fr 1fr !important; }

/* Tap-only affordance */
.chips.with-borders > *{ cursor: pointer !important; }
.chip{ cursor: pointer !important; }
.chips.with-borders > *:active{ cursor: pointer !important; }

/* Blink: strong 2s pulse (OpSpec) */
@keyframes ptable-blink-kf {
  0%, 20%, 40%, 60%, 80%, 100% { box-shadow: 0 0 0 0 rgba(59,130,246,.0); }
  10%, 30%, 50%, 70%, 90%    { box-shadow: 0 0 0 4px rgba(59,130,246,.35); }
}
.ptable-blink { animation: ptable-blink-kf 2s ease-out 0s 1; }

/* Softer multiply-pair highlight (no blue pill) */
.hl {
  border: none !important;
  background: radial-gradient(circle at 50% 50%, rgba(59,130,246,.18), rgba(59,130,246,0) 60%);
  outline: none !important;
}

/* Problem text matches ptable font */
.problem-body { font-size: inherit !important; line-height: inherit !important; color: inherit !important; }



/* v10.0.2: stronger primary button */
.button.primary {
  background: #0b5bd3;
  color: #fff;
  box-shadow: 0 6px 14px rgba(0,0,0,.12), inset 0 -2px 0 rgba(0,0,0,.2);
}
.button.primary:hover { filter: brightness(1.05); }
.button.primary:active { transform: translateY(1px); box-shadow: 0 4px 10px rgba(0,0,0,.18), inset 0 1px 0 rgba(255,255,255,.2); }
/* Center text inside chips and cells more consistently */
.chip, .slot-wrap { display: inline-flex; align-items: center; justify-content: center; }
