*** Begin Patch
*** Update File: src/modules/circles/CirclesModule.jsx
@@
-return (
-    <div >
-      <ErrorOverlay show={showError} />
+return (
+    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-50 p-4">
+      <ErrorOverlay show={showError} />
@@
-{/* Title */}
-<div >
+{/* Title */}
+<div className="relative mb-6">
@@
-  {stage < 10 && (
-    <button
-      onClick={() => {
-        setStage(10);
-        setProblemCount(0);
-        setTotalCoins(prev => prev * 2); // Double coins for skipping
-      }}
-      
-    >
-      Skip to Stage 10 (2Ã— coins!)
-    </button>
-  )}
+  {stage < 10 && (
+    <BigButton
+      className="ug-button mb-2"
+      onClick={() => {
+        setStage(10);
+        setProblemCount(0);
+        setTotalCoins(prev => prev * 2); // Double coins for skipping
+      }}
+    >
+      Skip to Stage 10 (2Ã— coins!)
+    </BigButton>
+  )}
@@
-  <div >
-    <span ></span>
-    <span >{totalCoins}</span>
-  </div>
+  <div className="absolute right-0 top-0 bg-amber-100 border-2 border-amber-400 rounded-lg px-4 py-2 flex items-center gap-2">
+    <span className="text-xl">ðŸª™</span>
+    <span className="font-bold text-amber-700 text-xl">{totalCoins}</span>
+  </div>
@@
-  <h1 >
-    Circles
-  </h1>
-  <p >
-    One Shape, Two Formulas, Three Words
-  </p>
-  <p >
-    Stage {stage}
-  </p>
-</div>
+  <h1 className="text-3xl font-extrabold text-gray-800">Circles</h1>
+  <p className="text-gray-600">One Shape, Two Formulas, Three Words</p>
+  <p className="text-sm text-gray-400 mt-1">Stage {stage}</p>
+</div>
@@
-<div >
+<div className="grid md:grid-cols-2 gap-4">
@@
-{/* LEFT: Visual */}
-<div >
+{/* LEFT: Visual */}
+<div className="bg-white rounded-xl shadow-md p-4">
@@
-{stage >= 3 && currentFormula && (
-  <div >
-    {currentFormula}
-  </div>
-)}
+{stage >= 3 && currentFormula && (
+  <div className="inline-block mb-3 px-3 py-1 rounded-full bg-slate-100 border border-slate-300 text-slate-700 font-mono">
+    {currentFormula}
+  </div>
+)}
@@
-{stage === 1 && (
-  <div >
-    {shapes.map((shape, i) => (
-      <button
-        key={i}
-        onClick={() => handleShapeSelect(shape)}
-        
-        onMouseEnter={(e) => e.target.style.transform = 'scale(1.05)'}
-        onMouseLeave={(e) => e.target.style.transform = 'scale(1)'}
-      >
-        {shape.emoji}
-      </button>
-    ))}
-  </div>
-)}
+{stage === 1 && (
+  <div className="grid grid-cols-2 sm:grid-cols-4 gap-3">
+    {shapes.map((shape, i) => (
+      <button
+        key={i}
+        onClick={() => handleShapeSelect(shape)}
+        className="ug-answer ug-answer--pill text-2xl py-3"
+        onMouseEnter={(e) => e.currentTarget.style.transform = 'scale(1.05)'}
+        onMouseLeave={(e) => e.currentTarget.style.transform = 'scale(1)'}
+      >
+        {shape.emoji || 'shape'}
+      </button>
+    ))}
+  </div>
+)}
@@
-{/* RIGHT: Questions */}
-<div >
+{/* RIGHT: Questions */}
+<div className="bg-white rounded-xl shadow-md p-4">
@@
-{showMoveOnChoice ? (
-  <div >
-    <div ></div>
-    <div >
-      Great job!
-    </div>
-    <div >
-      <button
-        onClick={() => handlePracticeChoice(false)}
-        
-      >
-        More practice
-      </button>
-      {stage < 10 && (
-        <button
-          onClick={() => handlePracticeChoice(true)}
-          
-        >
-          Move on â†’
-        </button>
-      )}
-    </div>
-  </div>
-) : (
+{showMoveOnChoice ? (
+  <div className="text-center">
+    <div className="text-4xl mb-2">âœ“</div>
+    <div className="text-xl font-bold mb-4">Great job!</div>
+    <div className="flex justify-center gap-3">
+      <BigButton onClick={() => handlePracticeChoice(false)} className="ug-button">
+        More practice
+      </BigButton>
+      {stage < 10 && (
+        <BigButton onClick={() => handlePracticeChoice(true)} className="ug-button">
+          Move on â†’
+        </BigButton>
+      )}
+    </div>
+  </div>
+) : (
@@
-<div>
-  <div >
-    Which one is a circle?
-  </div>
-  <p >
-    Click on the circle shape on the left.
-  </p>
-</div>
+<div>
+  <div className="text-xl font-semibold mb-2">Which one is a circle?</div>
+  <p className="text-slate-600">Click on the circle shape on the left.</p>
+</div>
@@
-<div>
-  <div >
-    Where is the {termToPlace}?
-  </div>
-  <p >
-    Click on the {termToPlace} on the circle to the left.
-  </p>
-</div>
+<div>
+  <div className="text-xl font-semibold mb-2">Where is the {termToPlace}?</div>
+  <p className="text-slate-600">Click on the {termToPlace} on the circle to the left.</p>
+</div>
@@
-<div >
-  {getOperationChoices(currentTarget).map((op, i) => (
-    <button
-      key={i}
-      onClick={() => handleOperationSelect(op)}
-      
-    >
-      {op}
-    </button>
-  ))}
-</div>
+<div className="flex flex-wrap gap-2">
+  {getOperationChoices(currentTarget).map((op, i) => (
+    <button
+      key={i}
+      onClick={() => handleOperationSelect(op)}
+      className="ug-answer ug-answer--pill"
+    >
+      {op}
+    </button>
+  ))}
+</div>
@@
-<div >
-  {getValueChoices(currentTarget).map((val, i) => (
-    <button
-      key={i}
-      onClick={() => handleValueSelect(val)}
-      
-    >
-      {val % 1 === 0 ? val : val.toFixed(1)}
-    </button>
-  ))}
-</div>
+<div className="flex flex-wrap gap-2">
+  {getValueChoices(currentTarget).map((val, i) => (
+    <button
+      key={i}
+      onClick={() => handleValueSelect(val)}
+      className="ug-answer ug-answer--pill"
+    >
+      {val % 1 === 0 ? val : val.toFixed(1)}
+    </button>
+  ))}
+</div>
*** End Patch
